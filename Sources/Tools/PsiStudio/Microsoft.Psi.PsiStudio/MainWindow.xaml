<!-- Copyright (c) Microsoft Corporation. All rights reserved.
     Licensed under the MIT License. -->

<Window
    x:Class="Microsoft.Psi.PsiStudio.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    xmlns:local="clr-namespace:Microsoft.Psi.PsiStudio"
    xmlns:localconv="clr-namespace:Microsoft.Psi.PsiStudio.Converters"
    xmlns:conv="clr-namespace:Microsoft.Psi.Visualization.Converters;assembly=Microsoft.Psi.Visualization.Windows"
    xmlns:views="clr-namespace:Microsoft.Psi.Visualization.Views;assembly=Microsoft.Psi.Visualization.Windows"
    xmlns:vo="clr-namespace:Microsoft.Psi.Visualization.VisualizationObjects;assembly=Microsoft.Psi.Visualization.Windows"
    xmlns:vp="clr-namespace:Microsoft.Psi.Visualization.VisualizationPanels;assembly=Microsoft.Psi.Visualization.Windows"
    xmlns:viewmodels="clr-namespace:Microsoft.Psi.Visualization.ViewModels;assembly=Microsoft.Psi.Visualization.Windows"
    xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit.PropertyGrid;assembly=Xceed.Wpf.Toolkit"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    Title="{Binding TitleText}"
    WindowState="{Binding AppSettings.WindowState, Mode=TwoWay}"
    Top="{Binding AppSettings.WindowPositionTop, Mode=TwoWay}"
    Left="{Binding AppSettings.WindowPositionLeft, Mode=TwoWay}"
    Height="{Binding AppSettings.WindowHeight, Mode=TwoWay}"
    Width="{Binding AppSettings.WindowWidth, Mode=TwoWay}"
    Background="{StaticResource WindowBackgroundBrush}">
    
    <Window.InputBindings>
        <KeyBinding Command="{Binding PlayPauseCommand}" Key="F10" />
        <KeyBinding Command="{Binding ToggleCursorFollowsMouseComand}" Key="F" Modifiers="Alt" />
        <KeyBinding Command="{Binding ClearSelectionCommand}" Key="C" Modifiers="Alt" />
        <KeyBinding Command="{Binding NudgeRightCommand}" Key="OemPeriod" />
        <KeyBinding Command="{Binding NudgeLeftCommand}" Key="OemComma" />
        <KeyBinding Command="{Binding JumpRightCommand}" Key="OemPeriod" Modifiers="Shift" />
        <KeyBinding Command="{Binding JumpLeftCommand}" Key="OemComma" Modifiers="Shift" />
    </Window.InputBindings>

    <Window.Resources>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <conv:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
        <local:PsiStudioTemplateSelector x:Key="PsiStudioTemplateSelector" />
        <localconv:IconUriConverter x:Key="IconUriConverter" />
    </Window.Resources>

    <Grid UseLayoutRounding="True">
        <Grid.Resources>
            <Style TargetType="ContextMenu" BasedOn="{StaticResource {x:Type ContextMenu}}" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" AutomationProperties.Name="MainMenu">
            <MenuItem Header="_File">
                <MenuItem Header="_Open Store" Command="{Binding OpenStoreCommand}" Height="25">
                    <MenuItem.Icon>
                        <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=store-open.png}" Height="16" Margin="4,0,0,0"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Open _Dataset" Command="{Binding OpenDatasetCommand}" Height="25">
                    <MenuItem.Icon>
                        <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=dataset-open.png}" Height="16" Margin="4,0,0,0"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Save Dataset" Command="{Binding SaveDatasetCommand}" Height="25">
                    <MenuItem.Icon>
                        <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=dataset-save.png}" Height="16" Margin="4,0,0,0"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}" Height="25"/>
            </MenuItem>
        </Menu>

        <ToolBarTray Grid.Row="1" Background="{StaticResource MediumBackgroundColorBrush}">
            <ToolBar Background="{StaticResource MediumBackgroundColorBrush}" Loaded="ToolBar_Loaded" AutomationProperties.Name="MainToolBar">
                <Button Command="{Binding OpenStoreCommand}" Margin="1" ToolTip="Open Store" AutomationProperties.Name="OpenStoreButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=store-open.png}"/>
                </Button>
                <Button Command="{Binding OpenDatasetCommand}" Margin="1" ToolTip="Open Dataset" AutomationProperties.Name="OpenDatasetButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=dataset-open.png}"/>
                </Button>
                <Button Command="{Binding SaveDatasetCommand}" Margin="1" ToolTip="Save Dataset" AutomationProperties.Name="SaveDatasetButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=dataset-save.png}"/>
                </Button>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <Button Command="{Binding CreateAnnotationStreamCommand}" Margin="1" ToolTip="Create Annotation Stream" AutomationProperties.Name="CreateAnnotationStreamButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=annotation.png}"/>
                </Button>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <Button Command="{Binding InsertTimelinePanelCommand}" Margin="1" ToolTip="Insert Timeline Panel" AutomationProperties.Name="InsertTimelinePanelButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-timeline.png}"/>
                </Button>
                <Button Command="{Binding Insert1CellInstantPanelCommand}" Margin="1" ToolTip="Insert 1 Cell Instant Panel" AutomationProperties.Name="Insert1CellInstantPanelButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-matrix-1.png}"/>
                </Button>
                <Button Command="{Binding Insert2CellInstantPanelCommand}" Margin="1" ToolTip="Insert 2 Cell Instant Panel" AutomationProperties.Name="Insert2CellInstantPanelButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-matrix-2.png}"/>
                </Button>
                <Button Command="{Binding Insert3CellInstantPanelCommand}" Margin="1" ToolTip="Insert 3 Cell Instant Panel" AutomationProperties.Name="Insert3CellInstantPanelButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-matrix-3.png}"/>
                </Button>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <ToggleButton IsChecked="{Binding VisualizationContainer.Navigator.ShowAbsoluteTiming, Mode=TwoWay}" Margin="1" ToolTip="Absolute Timing" AutomationProperties.Name="AbsoluteTimingToggleButton">
                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=timing-absolute.png}"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding VisualizationContainer.Navigator.ShowTimingRelativeToSessionStart, Mode=TwoWay}" Margin="1" ToolTip="Timing relative to Session Start" AutomationProperties.Name="TimingRelativeToSessionStartToggleButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=timing-relative-session.png}"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding VisualizationContainer.Navigator.ShowTimingRelativeToSelectionStart, Mode=TwoWay}" Margin="1" ToolTip="Timing relative to Selection Start" AutomationProperties.Name="TimingRelativeToSelectionStartToggleButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=timing-relative-selection.png}"/>
                </ToggleButton>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <Button Command="{Binding ZoomToSessionExtentsCommand}" Margin="1" ToolTip="Zoom to Session Extents" AutomationProperties.Name="ZoomToSessionExtentsButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=zoom-to-session.png}"/>
                </Button>
                <Button Command="{Binding ZoomToSelectionCommand}" Margin="1" ToolTip="Zoom to Selection" AutomationProperties.Name="ZoomToSelectionButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=zoom-to-selection.png}"/>
                </Button>
                <Button Command="{Binding ClearSelectionCommand}" Margin="1" ToolTip="Clear Selection (Alt+C)" AutomationProperties.Name="ClearSelectionButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=selection-remove.png}"/>
                </Button>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <Button Command="{Binding MoveCursorToSelectionStartCommand}" Margin="1" ToolTip="Move cursor to the start of the selection" AutomationProperties.Name="MoveCursorToStartOfSelectionButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=move-to-beginning.png}"/>
                </Button>
                <Button Command="{Binding PlayPauseCommand}" Margin="1" AutomationProperties.Name="PlayPauseButton">
                    <Image>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding VisualizationContainer.Navigator.IsCursorModePlayback}" Value="True">
                                        <Setter Property="Source" Value="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=stop.png}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding VisualizationContainer.Navigator.IsCursorModePlayback}" Value="False">
                                        <Setter Property="Source" Value="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=play.png}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding VisualizationContainer.Navigator.IsCursorModePlayback}" Value="True">
                                    <Setter Property="ToolTip" Value="Stop"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding VisualizationContainer.Navigator.IsCursorModePlayback}" Value="False">
                                    <Setter Property="ToolTip" Value="Play"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <ToggleButton Command="{Binding TogglePlayRepeatCommand}" Margin="1" ToolTip="Repeat playback" AutomationProperties.Name="RepeatPlaybackToggleButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=play-repeat.png}"/>
                </ToggleButton>
                <Button Command="{Binding MoveCursorToSelectionEndCommand}" Margin="1" ToolTip="Move cursor to the end of the selection" AutomationProperties.Name="MoveCursorToEndOfSelectionButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=move-to-end.png}"/>
                </Button>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <TextBlock Margin="5">Speed:</TextBlock>
                <Button Command="{Binding DecreasePlaySpeedCommand}" Margin="1" ToolTip="Decrease play speed" AutomationProperties.Name="DecreasePlaySpeedButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=playback-speed-decrease.png}"/>
                </Button>
                <TextBox Grid.Column="1" HorizontalContentAlignment="Right" Text="{Binding VisualizationContainer.Navigator.PlaySpeed, Mode=OneWay}" Margin="0,2,0,0" TextAlignment="Center" Width="40" IsReadOnly="False" Foreground="LightGray" BorderBrush="DimGray" AutomationProperties.Name="PlaySpeedTextBox" />
                <Button Command="{Binding IncreasePlaySpeedCommand}" Margin="1" ToolTip="Increase play speed" AutomationProperties.Name="IncreasePlaySpeedButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=playback-speed-increase.png}"/>
                </Button>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <Button Command="{Binding ToggleLiveModeCommand}" Margin="1" ToolTip="View head of live stream" AutomationProperties.Name="ViewHeadOfLiveStreamButton">
                    <Image>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding VisualizationContainer.Navigator.IsCursorModeLive}" Value="True">
                                        <Setter Property="Source" Value="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=live-button-on.png}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding VisualizationContainer.Navigator.IsCursorModeLive}" Value="False">
                                        <Setter Property="Source" Value="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=live-button-off.png}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <ToggleButton Command="{Binding ToggleCursorFollowsMouseComand}" IsChecked="{Binding VisualizationContainer.Navigator.CursorFollowsMouse, Mode=OneWay}" Margin="1" ToolTip="Cursor Follows Mouse (Alt+F)" AutomationProperties.Name="CursorFollowsMouseToggleButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=cursor-follow.png}"/>
                </ToggleButton>
                <!--Separator AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                <Button Command="{Binding ShowSettingsWindowComand}" ToolTip="PsiStudio Settings" AutomationProperties.Name="ShowSettingsWindowButton">
                    <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=settings.png}"/>
                </Button-->
            </ToolBar>
        </ToolBarTray>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding AppSettings.TreeViewPanelWidth, Mode=TwoWay}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" MinWidth="100"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{Binding AppSettings.PropertiesPanelWidth, Mode=TwoWay}"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding AppSettings.DatasetsTabHeight, Mode=TwoWay}" MinHeight="100"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TabControl Grid.Row="0" Name="DatasetsTabControl" SelectedIndex="0" Margin="4,4,0,4">
                    <TabItem Name="Datasets" Header="Datasets">
                        <Border Margin="0" Padding="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderThickness="0" Background="{StaticResource MediumBackgroundColorBrush}" HorizontalAlignment="Stretch">
                                    <StackPanel Orientation="Horizontal" Background="{StaticResource MediumBackgroundColorBrush}" FlowDirection="RightToLeft" HorizontalAlignment="Stretch">
                                        <Button Command="{Binding CollapseDatasetsTreeCommand}" Margin="4, 4, 0, 4" ToolTip="Collapse all nodes" AutomationProperties.Name="CollapseDatasetsButton">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=collapse-all.png}"/>
                                        </Button>
                                        <Button Command="{Binding ExpandDatasetsTreeCommand}" Margin="4, 4, 0, 4" ToolTip="Expand all nodes" AutomationProperties.Name="ExpandDatasetsButton">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=expand-all.png}"/>
                                        </Button>
                                    </StackPanel>
                                </Border>
                                <TreeView Grid.Row="1" Margin="0" Name="DatasetsTreeView" ItemsSource="{Binding DatasetViewModels}" ItemTemplateSelector="{StaticResource ResourceKey=PsiStudioTemplateSelector}" AutomationProperties.Name="DatasetsTreeView">
                                    <TreeView.Resources>
                                        <HierarchicalDataTemplate x:Key="DatasetTemplate" ItemsSource="{Binding SessionViewModels}">
                                            <StackPanel Name="Panel" Orientation="Horizontal">
                                                <StackPanel.ContextMenu>
                                                    <ContextMenu/>
                                                </StackPanel.ContextMenu>
                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=dataset.png}"/>
                                                <TextBlock Text="{Binding Name}" Margin="3,0,0,0"/>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="ContextMenuOpening">
                                                        <cmd:EventToCommand Command="{Binding Path=ContextMenuOpeningCommand}" CommandParameter="{Binding ElementName=Panel}" PassEventArgsToCommand="False" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>

                                        <HierarchicalDataTemplate x:Key="SessionTemplate" ItemsSource="{Binding PartitionViewModels}">
                                            <StackPanel Name="Panel" Orientation="Horizontal" Opacity="{Binding UiElementOpacity}">
                                                <StackPanel.ContextMenu>
                                                    <ContextMenu/>
                                                </StackPanel.ContextMenu>
                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=session.png}"/>
                                                <TextBlock Text="{Binding Name}" Margin="3,0,0,0"/>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="ContextMenuOpening">
                                                        <cmd:EventToCommand Command="{Binding Path=ContextMenuOpeningCommand}" CommandParameter="{Binding ElementName=Panel}" PassEventArgsToCommand="False" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>

                                        <HierarchicalDataTemplate x:Key="PartitionTemplate" ItemsSource="{Binding StreamTreeRoot.Children}">
                                            <StackPanel Name="Panel" Orientation="Horizontal" Opacity="{Binding UiElementOpacity}">
                                                <StackPanel.ContextMenu>
                                                    <ContextMenu/>
                                                </StackPanel.ContextMenu>
                                                <Image Source="{Binding IconSource}"/>
                                                <TextBlock Text="{Binding DisplayName}" Margin="3,0,0,0"/>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="ContextMenuOpening">
                                                        <cmd:EventToCommand Command="{Binding Path=ContextMenuOpeningCommand}" CommandParameter="{Binding ElementName=Panel}" PassEventArgsToCommand="False" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>

                                        <HierarchicalDataTemplate x:Key="StreamTreeNodeTemplate" ItemsSource="{Binding Children}">
                                            <StackPanel Name="Panel" Orientation="Horizontal" Opacity="{Binding UiElementOpacity}" MouseMove="StreamTreeNode_MouseMove" IsEnabled="{Binding CanVisualize}">
                                                <StackPanel.ContextMenu>
                                                    <ContextMenu/>
                                                </StackPanel.ContextMenu>
                                                <Image Source="{Binding IconSource}"/>
                                                <TextBlock Text="{Binding DisplayName}" Margin="3,0,0,0" Foreground="{StaticResource ForegroundBrush}" />
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="ContextMenuOpening">
                                                        <cmd:EventToCommand Command="{Binding Path=ContextMenuOpeningCommand}" CommandParameter="{Binding ElementName=Panel}" PassEventArgsToCommand="False" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.Resources>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectedItemChanged">
                                            <cmd:EventToCommand Command="{Binding Path=SelectedDatasetChangedCommand}" PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <cmd:EventToCommand Command="{Binding Path=TreeSelectedCommand}" CommandParameter="DatasetsTreeView" PassEventArgsToCommand="False" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TreeView>
                            </Grid>
                        </Border>
                    </TabItem>
                </TabControl>

                <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="{StaticResource MediumBackgroundColorBrush}"/>

                <TabControl Grid.Row="2" Name="VisualizationsTabControl" SelectedIndex="0" Margin="4,0,0,4">
                    <TabItem Name="Visualizations" Header="Layout">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" BorderThickness="0" Background="{StaticResource MediumBackgroundColorBrush}" HorizontalAlignment="Stretch">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                                        <ComboBox Name="LayoutsCombobox" 
                                              ItemsSource="{Binding AvailableLayouts}"
                                              SelectedItem="{Binding CurrentLayout, Mode=TwoWay}"
                                              Margin="6, 1, 0, 0"
                                              Width="150"                                          
                                              IsEditable="False"
                                              IsReadOnly="True"
                                              VerticalContentAlignment="Center"
                                              BorderBrush="{StaticResource BorderColorBrush}"
                                              Background="{StaticResource WindowBackgroundBrush}"
                                              AutomationProperties.Name="LayoutsComboBox" />
                                        <Button Command="{Binding SaveLayoutCommand}" Margin="4,4,0,4" ToolTip="Save Layout" AutomationProperties.Name="SaveLayoutButton">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=layout-save.png}"/>
                                        </Button>
                                        <Button Command="{Binding SaveLayoutAsCommand}" Margin="4,4,0,4" ToolTip="Save Layout As..." AutomationProperties.Name="SaveLayoutAsButton">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=layout-save-as.png}"/>
                                        </Button>
                                        <Separator Margin="4,2,4,2" Background="{StaticResource SeparatorColorBrush}" AutomationProperties.IsOffscreenBehavior="Offscreen"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft">
                                        <Button Command="{Binding CollapseVisualizationsTreeCommand}" Margin="4, 4, 0, 4" ToolTip="Collapse all nodes" AutomationProperties.Name="CollapseNodesButton">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=collapse-all.png}"/>
                                        </Button>
                                        <Button Command="{Binding ExpandVisualizationsTreeCommand}" Margin="4, 4, 0, 4" ToolTip="Expand all nodes" AutomationProperties.Name="ExpandNodesButton">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=expand-all.png}"/>
                                        </Button>
                                        <Button Command="{Binding SynchronizeTreesCommand}" Margin="4, 4, 0, 4" ToolTip="Synchronize the selected stream with the source" AutomationProperties.Name="SynchronizeStreamsButton">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=synchronize.png}"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <TreeView Grid.Row="1" Name="VisualizationTreeView" ItemsSource="{Binding VisualizationContainer.Panels}" AutomationProperties.Name="VisualizationTreeView">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type vp:VisualizationPanel}" ItemsSource="{Binding VisualizationObjects}">
                                        <StackPanel Orientation="Horizontal">
                                            <ContentPresenter Content="{Binding Path=.}">
                                                <ContentPresenter.Resources>
                                                    <DataTemplate DataType="{x:Type vp:TimelineVisualizationPanel}">
                                                        <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-timeline.png}"/>
                                                    </DataTemplate>
                                                    <DataTemplate DataType="{x:Type vp:XYVisualizationPanel}">
                                                        <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-2d.png}"/>
                                                    </DataTemplate>
                                                    <DataTemplate DataType="{x:Type vp:XYZVisualizationPanel}">
                                                        <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-3d.png}"/>
                                                    </DataTemplate>
                                                    <DataTemplate DataType="{x:Type vp:InstantVisualizationContainer}">
                                                        <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-placeholder.png}"/>
                                                    </DataTemplate>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>
                                            <TextBlock Text="{Binding Name}" Margin="7,0,0,0">
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Zoom to Panel Extents" Command="{Binding ZoomToPanelCommand}" Visibility="{Binding ShowZoomToPanelMenuItem, Converter={StaticResource BoolToVisibilityConverter}}" IsEnabled="{Binding CanZoomToPanel}" Height="25">
                                                            <MenuItem.Icon>
                                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=zoom-to-panel.png}" Height="16" Margin="4,0,0,0"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <Separator Visibility="{Binding ShowZoomToPanelMenuItem, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                        <MenuItem Header="Remove" Command="{Binding Container.DeleteVisualizationPanelCommand}" CommandParameter="{Binding .}" Height="25">
                                                            <MenuItem.Icon>
                                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-remove.png}" Height="16" Margin="4,0,0,0"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>

                                    <HierarchicalDataTemplate DataType="{x:Type vp:InstantVisualizationContainer}" ItemsSource="{Binding Panels}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-matrix-1.png}"/>
                                            <TextBlock Text="{Binding Name}" Margin="7,0,0,0">
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Remove" Command="{Binding Container.DeleteVisualizationPanelCommand}" CommandParameter="{Binding .}" Height="25">
                                                            <MenuItem.Icon>
                                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-remove.png}" Height="16" Margin="4,0,0,0"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>

                                    <HierarchicalDataTemplate DataType="{x:Type vp:InstantVisualizationPlaceholderPanel}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-placeholder.png}"/>
                                            <TextBlock Text="-Empty-" Margin="7,0,0,0"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>

                                    <HierarchicalDataTemplate DataType="{x:Type vo:VisualizationObject}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding IconSource}"/>
                                            <TextBlock Text="{Binding Name}" Margin="7,0,0,0">
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="{Binding ToggleSnapToStreamCommandText}" Command="{Binding ToggleSnapToStreamCommand}" Visibility="{Binding CanSnapToStream, Converter={StaticResource BoolToVisibilityConverter}}" Height="25">
                                                            <MenuItem.Icon>
                                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=stream-snap.png}" Height="16" Margin="4,0,0,0"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <MenuItem Header="{Binding EnableAudioCommandText}" Command="{Binding EnableAudioCommand}" Visibility="{Binding IsAudioStream, Converter={StaticResource BoolToVisibilityConverter}}" Height="25">
                                                                <MenuItem.Icon>
                                                                <Image Source="{Binding AudioIconSource}" Height="16" Margin="4,0,0,0"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <MenuItem Header="Zoom to Stream Extents" Command="{Binding ZoomToStreamCommand}" Visibility="{Binding ShowZoomToStreamMenuItem, Converter={StaticResource BoolToVisibilityConverter}}" Height="25">
                                                            <MenuItem.Icon>
                                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=zoom-to-stream.png}" Height="16" Margin="4,0,0,0"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <Separator/>
                                                        <MenuItem Header="Remove" Command="{Binding Panel.DeleteVisualizationCommand}" CommandParameter="{Binding .}" Height="25">
                                                            <MenuItem.Icon>
                                                                <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-remove.png}" Height="16" Margin="4,0,0,0"/>
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectedItemChanged">
                                        <cmd:EventToCommand Command="{Binding Path=SelectedVisualizationChangedCommand}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <cmd:EventToCommand Command="{Binding Path=TreeSelectedCommand}" CommandParameter="VisualizationTreeView" PassEventArgsToCommand="False" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TreeView>
                        </Grid>
                    </TabItem>
                </TabControl>

            </Grid>

            <GridSplitter Grid.Column="1" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center" Background="{StaticResource MediumBackgroundColorBrush}" />

            <Grid Grid.Column="2">
                <TabControl Name="CanvasTabControl" SelectedIndex="0" Margin="4,4,0,4">
                    <TabItem Name="Canvas" Header="Visualization">
                        <Border Background="{StaticResource DarkBackgroundColorBrush}" Margin="0" Padding="0">
                            <views:VisualizationContainerView DataContext="{Binding VisualizationContainer}" Margin="0,0,0,0"/>
                        </Border>
                    </TabItem>
                </TabControl>
            </Grid>

            <GridSplitter Grid.Column="3" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center" Background="{StaticResource MediumBackgroundColorBrush}" />

            <TabControl Grid.Column="4" Name="PropertiesTabControl" SelectedIndex="0" Margin="0,4,4,4">
                <TabItem Name="Properties" Header="Properties">
                    <Border Background="{StaticResource DarkBackgroundColorBrush}" Margin="0" Padding="0">
                        <xctk:PropertyGrid SelectedObject="{Binding SelectedPropertiesObject}" ShowSortOptions="False" ShowSearchBox="False" Visibility="{Binding SelectedPropertiesObject, Converter={StaticResource ObjectToVisibilityConverter}}"/>
                    </Border>
                </TabItem>
            </TabControl>

        </Grid>

    </Grid>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <cmd:EventToCommand Command="{Binding Path=ClosedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
